//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WS_TraficoMadrid.WS_TraficoMadrid_ServiceGEO {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WS_TraficoMadrid_ServiceGEO.ServiceGEOSoap")]
    public interface ServiceGEOSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStreet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetStreet(string idClient, string passKey, string description, string streetNumber, string Radius, string Stops, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStreet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetStreetAsync(string idClient, string passKey, string description, string streetNumber, string Radius, string Stops, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStopsFromStop", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getStopsFromStop(string idClient, string passKey, string idStop, string Radius, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStopsFromStop", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getStopsFromStopAsync(string idClient, string passKey, string idStop, string Radius, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStopsFromXY", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getStopsFromXY(string idClient, string passKey, string coordinateX, string coordinateY, string Radius, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStopsFromXY", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getStopsFromXYAsync(string idClient, string passKey, string coordinateX, string coordinateY, string Radius, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getArriveStop", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getArriveStop(string idClient, string passKey, string idStop, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getArriveStop", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getArriveStopAsync(string idClient, string passKey, string idStop, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetArriveInterchangeLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetArriveInterchangeLine(string idClient, string passKey, int idIntercambiador, int idLinea, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetArriveInterchangeLine", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetArriveInterchangeLineAsync(string idClient, string passKey, int idIntercambiador, int idLinea, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getArriveClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getArriveClient(string idClient, string passKey, string Client, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getArriveClient", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getArriveClientAsync(string idClient, string passKey, string Client, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPointsOfInterest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getPointsOfInterest(string idClient, string passKey, string coordinateX, string coordinateY, string tipos, string Radius, string moreInfo, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPointsOfInterest", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getPointsOfInterestAsync(string idClient, string passKey, string coordinateX, string coordinateY, string tipos, string Radius, string moreInfo, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPointsOfInterestTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getPointsOfInterestTypes(string idClient, string passKey, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPointsOfInterestTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getPointsOfInterestTypesAsync(string idClient, string passKey, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStreetFromXY", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getStreetFromXY(string idClient, string passKey, string coordinateX, string coordinateY, string Radius, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStreetFromXY", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getStreetFromXYAsync(string idClient, string passKey, string coordinateX, string coordinateY, string Radius, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getInfoLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getInfoLine(string idClient, string passKey, string fecha, string line, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getInfoLine", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getInfoLineAsync(string idClient, string passKey, string fecha, string line, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInfoLineExtend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetInfoLineExtend(string idClient, string passKey, string fecha, string line, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInfoLineExtend", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetInfoLineExtendAsync(string idClient, string passKey, string fecha, string line, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStopsLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getStopsLine(string idClient, string passKey, string line, string direction, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStopsLine", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getStopsLineAsync(string idClient, string passKey, string line, string direction, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode getGroups(string idClient, string passKey, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> getGroupsAsync(string idClient, string passKey, string statistics, string cultureInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRouteLinesRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetRouteLinesRoute(string idClient, string PassKey, string SelectDate, string Lines);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRouteLinesRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetRouteLinesRouteAsync(string idClient, string PassKey, string SelectDate, string Lines);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EstadisticaCache", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode EstadisticaCache(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EstadisticaCache", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> EstadisticaCacheAsync(string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceGEOSoapChannel : WS_TraficoMadrid.WS_TraficoMadrid_ServiceGEO.ServiceGEOSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceGEOSoapClient : System.ServiceModel.ClientBase<WS_TraficoMadrid.WS_TraficoMadrid_ServiceGEO.ServiceGEOSoap>, WS_TraficoMadrid.WS_TraficoMadrid_ServiceGEO.ServiceGEOSoap {
        
        public ServiceGEOSoapClient() {
        }
        
        public ServiceGEOSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceGEOSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGEOSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGEOSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.XmlNode GetStreet(string idClient, string passKey, string description, string streetNumber, string Radius, string Stops, string statistics, string cultureInfo) {
            return base.Channel.GetStreet(idClient, passKey, description, streetNumber, Radius, Stops, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetStreetAsync(string idClient, string passKey, string description, string streetNumber, string Radius, string Stops, string statistics, string cultureInfo) {
            return base.Channel.GetStreetAsync(idClient, passKey, description, streetNumber, Radius, Stops, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getStopsFromStop(string idClient, string passKey, string idStop, string Radius, string statistics, string cultureInfo) {
            return base.Channel.getStopsFromStop(idClient, passKey, idStop, Radius, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getStopsFromStopAsync(string idClient, string passKey, string idStop, string Radius, string statistics, string cultureInfo) {
            return base.Channel.getStopsFromStopAsync(idClient, passKey, idStop, Radius, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getStopsFromXY(string idClient, string passKey, string coordinateX, string coordinateY, string Radius, string statistics, string cultureInfo) {
            return base.Channel.getStopsFromXY(idClient, passKey, coordinateX, coordinateY, Radius, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getStopsFromXYAsync(string idClient, string passKey, string coordinateX, string coordinateY, string Radius, string statistics, string cultureInfo) {
            return base.Channel.getStopsFromXYAsync(idClient, passKey, coordinateX, coordinateY, Radius, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getArriveStop(string idClient, string passKey, string idStop, string statistics, string cultureInfo) {
            return base.Channel.getArriveStop(idClient, passKey, idStop, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getArriveStopAsync(string idClient, string passKey, string idStop, string statistics, string cultureInfo) {
            return base.Channel.getArriveStopAsync(idClient, passKey, idStop, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode GetArriveInterchangeLine(string idClient, string passKey, int idIntercambiador, int idLinea, string statistics, string cultureInfo) {
            return base.Channel.GetArriveInterchangeLine(idClient, passKey, idIntercambiador, idLinea, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetArriveInterchangeLineAsync(string idClient, string passKey, int idIntercambiador, int idLinea, string statistics, string cultureInfo) {
            return base.Channel.GetArriveInterchangeLineAsync(idClient, passKey, idIntercambiador, idLinea, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getArriveClient(string idClient, string passKey, string Client, string statistics, string cultureInfo) {
            return base.Channel.getArriveClient(idClient, passKey, Client, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getArriveClientAsync(string idClient, string passKey, string Client, string statistics, string cultureInfo) {
            return base.Channel.getArriveClientAsync(idClient, passKey, Client, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getPointsOfInterest(string idClient, string passKey, string coordinateX, string coordinateY, string tipos, string Radius, string moreInfo, string statistics, string cultureInfo) {
            return base.Channel.getPointsOfInterest(idClient, passKey, coordinateX, coordinateY, tipos, Radius, moreInfo, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getPointsOfInterestAsync(string idClient, string passKey, string coordinateX, string coordinateY, string tipos, string Radius, string moreInfo, string statistics, string cultureInfo) {
            return base.Channel.getPointsOfInterestAsync(idClient, passKey, coordinateX, coordinateY, tipos, Radius, moreInfo, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getPointsOfInterestTypes(string idClient, string passKey, string statistics, string cultureInfo) {
            return base.Channel.getPointsOfInterestTypes(idClient, passKey, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getPointsOfInterestTypesAsync(string idClient, string passKey, string statistics, string cultureInfo) {
            return base.Channel.getPointsOfInterestTypesAsync(idClient, passKey, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getStreetFromXY(string idClient, string passKey, string coordinateX, string coordinateY, string Radius, string statistics, string cultureInfo) {
            return base.Channel.getStreetFromXY(idClient, passKey, coordinateX, coordinateY, Radius, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getStreetFromXYAsync(string idClient, string passKey, string coordinateX, string coordinateY, string Radius, string statistics, string cultureInfo) {
            return base.Channel.getStreetFromXYAsync(idClient, passKey, coordinateX, coordinateY, Radius, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getInfoLine(string idClient, string passKey, string fecha, string line, string statistics, string cultureInfo) {
            return base.Channel.getInfoLine(idClient, passKey, fecha, line, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getInfoLineAsync(string idClient, string passKey, string fecha, string line, string statistics, string cultureInfo) {
            return base.Channel.getInfoLineAsync(idClient, passKey, fecha, line, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode GetInfoLineExtend(string idClient, string passKey, string fecha, string line, string statistics, string cultureInfo) {
            return base.Channel.GetInfoLineExtend(idClient, passKey, fecha, line, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetInfoLineExtendAsync(string idClient, string passKey, string fecha, string line, string statistics, string cultureInfo) {
            return base.Channel.GetInfoLineExtendAsync(idClient, passKey, fecha, line, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getStopsLine(string idClient, string passKey, string line, string direction, string statistics, string cultureInfo) {
            return base.Channel.getStopsLine(idClient, passKey, line, direction, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getStopsLineAsync(string idClient, string passKey, string line, string direction, string statistics, string cultureInfo) {
            return base.Channel.getStopsLineAsync(idClient, passKey, line, direction, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode getGroups(string idClient, string passKey, string statistics, string cultureInfo) {
            return base.Channel.getGroups(idClient, passKey, statistics, cultureInfo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> getGroupsAsync(string idClient, string passKey, string statistics, string cultureInfo) {
            return base.Channel.getGroupsAsync(idClient, passKey, statistics, cultureInfo);
        }
        
        public System.Xml.XmlNode GetRouteLinesRoute(string idClient, string PassKey, string SelectDate, string Lines) {
            return base.Channel.GetRouteLinesRoute(idClient, PassKey, SelectDate, Lines);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetRouteLinesRouteAsync(string idClient, string PassKey, string SelectDate, string Lines) {
            return base.Channel.GetRouteLinesRouteAsync(idClient, PassKey, SelectDate, Lines);
        }
        
        public System.Xml.XmlNode EstadisticaCache(string password) {
            return base.Channel.EstadisticaCache(password);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> EstadisticaCacheAsync(string password) {
            return base.Channel.EstadisticaCacheAsync(password);
        }
    }
}
